{"version":3,"sources":["webpack:///./js/fetchCountries.js","webpack:///./js/api.js"],"names":["refs","input","document","querySelector","countryList","addCountry","html","innerHTML","addEventListener","_","inputValue","value","length","cityName","fetch","then","res","json","data","catch","error","console","PNotify","alert","country","languages","forEach","language","name","capital","population","flag","template2","countries","i","template","showCountry"],"mappings":"yKAcA,MAAMA,EAAO,CACTC,MAAOC,SAASC,cAAc,YAC9BC,YAAaF,SAASC,cAAc,iBA+CxC,SAASE,EAAWC,GAChBN,EAAKI,YAAYG,UAAYD,EA9CjCN,EAAKC,MAAMO,iBAAiB,QAASC,WAAW,IAEhD,WACI,MAAMC,EAAaV,EAAKC,MAAMU,MAC9B,GAA0B,IAAtBD,EAAWE,OAAc,QCpBRC,EDsBXH,ECrBPI,MAAO,yCAAkBD,KAC/BE,KAAKC,GAAMA,EAAIC,QACfF,KAAKG,GAAMA,GACXC,MAAMC,GAASC,QAAQD,MAAM,QAAQA,KDkBZL,KAAKG,IACnBA,EAAKN,OAAS,GACdU,IAAQC,MAAM,8DAES,IAAhBL,EAAKN,OAgBxB,SAAmBY,GACf,IAAIlB,EAAO,GAEPmB,EAAY,GAEhBD,EAAQC,UAAUC,QAAQC,IACtBF,GAAc,OAAME,EAASC,cAGjCtB,EAAQ,MAAKkB,EAAQI,gCACJJ,EAAQK,sCACLL,EAAQM,oCACbN,EAAQO,kEACbN,mBAEVpB,EAAWC,GA9BH0B,CAAUd,EAAK,IAO3B,SAAkBe,GACd,IAAI3B,EAAO,GACX,IAAK,IAAI4B,EAAI,EAAGA,EAAID,EAAUrB,OAAQsB,IAClC5B,GAAS,QAAO2B,EAAUC,GAAGN,aAC7BvB,EAAWC,GATP6B,CAASjB,KC7BIL,MDgB6BuB,GAAe,Q","file":"main.5bf9281a0275a2709c78.js","sourcesContent":["import {\n    makeFetch\n} from \"./api\";\n//import { _ } from \"lodash\";\nimport * as _ from 'lodash';\nimport PNotify from 'pnotify/dist/es/PNotify.js';\nimport 'pnotify/dist/PNotifyBrightTheme.css';\n\n// Set default styling.\n//PNotify.defaults.styling = 'material';\n// This icon setting requires the Material Icons font. (See below.)\n//PNotify.defaults.icons = 'material';\n\n\nconst refs = {\n    input: document.querySelector('#myInput'),\n    countryList: document.querySelector('#countryList')\n}\nrefs.input.addEventListener('input', _.debounce(() => showCountry(), 500));\n\nfunction showCountry() {\n    const inputValue = refs.input.value;\n    if (inputValue.length === 0) return;\n\n    makeFetch(inputValue).then(data => {\n        if (data.length > 10) {\n            PNotify.alert(\"Too many matches found.Please enter a more specific query!\");\n            return;\n        } else if (data.length === 1) {\n            template2(data[0]);\n        } else {\n            template(data);\n        }\n    });\n}\n\nfunction template(countries) {\n    let html = \"\";\n    for (let i = 0; i < countries.length; i++) {\n        html += `<li> ${countries[i].name} </li>`;\n        addCountry(html);\n    }\n};\n\nfunction template2(country) {\n    let html = \"\";\n\n    let languages = \"\";\n\n    country.languages.forEach(language => {\n        languages += `<li>${language.name}</li>`\n    });\n\n    html = `<p>${country.name}</p>\n        <p>Capital:${country.capital}</p>\n        <p>Population:${country.population}</p>\n        <img src=${country.flag} alt=\"Ukraine\" width = \"80px\" height =\"60px\">\n        <ul>${languages}</ul>\n        `;\n    addCountry(html);\n\n};\n\nfunction addCountry(html) {\n    refs.countryList.innerHTML = html;\n}","const baseUrl = 'https://restcountries.eu/rest/v2';\n\nexport const makeFetch = cityName => {\nreturn fetch(`${baseUrl}/name/${cityName}`)\n.then(res =>res.json())\n.then(data=>data)\n.catch(error => console.error('ERROR',error));\n};\n\n"],"sourceRoot":""}